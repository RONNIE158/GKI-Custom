name: Build Pixel 7/7 Pro GKI Official Kernel

on:
  workflow_dispatch:

env:
  DEVICE: pantah
  KERNEL_DIR: kernel
  CLANG_VERSION: r416183b
  CCACHE_DIR: ${{ github.workspace }}/.ccache

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout Kernel Source
      run: |
        git clone --depth=1 -b android-gs-pantah-6.1-android16 https://android.googlesource.com/kernel/common ${{ env.KERNEL_DIR }}

    - name: Set up ccache
      uses: actions/cache@v3
      with:
        path: ${{ env.CCACHE_DIR }}
        key: ${{ runner.os }}-ccache-${{ hashFiles('**/arch/arm64/configs/gki_defconfig') }}
        restore-keys: |
          ${{ runner.os }}-ccache-

    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          bc bison build-essential flex gcc clang lld \
          libssl-dev libncurses5-dev libncursesw5-dev \
          python3 python3-pip rsync ccache zip \
          gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi \
          binutils-aarch64-linux-gnu binutils-arm-linux-gnueabi \
          git curl wget unzip

    - name: Set up Clang
      run: |
        git clone --depth=1 https://github.com/LineageOS/android_prebuilts_clang_kernel_linux-x86_clang-${{ env.CLANG_VERSION }} clang
        echo "${{ github.workspace }}/clang/bin" >> $GITHUB_PATH

    - name: Patch gki_defconfig for LXC/Docker
      run: |
        cd ${{ env.KERNEL_DIR }}
        cp arch/arm64/configs/gki_defconfig out/.config
        # Aktifkan CGroup v2 dan LXC/Docker support
        scripts/config --file out/.config -e CONFIG_CGROUPS
        scripts/config --file out/.config -e CONFIG_CGROUP_V2
        scripts/config --file out/.config -e CONFIG_MEMCG
        scripts/config --file out/.config -e CONFIG_CGROUP_CPUACCT
        scripts/config --file out/.config -e CONFIG_CGROUP_DEVICE
        scripts/config --file out/.config -e CONFIG_CGROUP_FREEZER
        scripts/config --file out/.config -e CONFIG_CGROUP_PIDS
        scripts/config --file out/.config -e CONFIG_CPUSETS
        scripts/config --file out/.config -e CONFIG_NAMESPACES
        scripts/config --file out/.config -e CONFIG_PID_NS
        scripts/config --file out/.config -e CONFIG_NET_NS
        scripts/config --file out/.config -e CONFIG_KEYS
        yes "" | make O=out ARCH=arm64 oldconfig

    - name: Build GKI Kernel
      run: |
        cd ${{ env.KERNEL_DIR }}
        export PATH="${{ github.workspace }}/clang/bin:$PATH"
        export CC=clang
        export LD=ld.lld
        export CCACHE_DIR="${{ env.CCACHE_DIR }}"
        make -j$(nproc) O=out ARCH=arm64 \
          CC=clang \
          CROSS_COMPILE=aarch64-linux-gnu- \
          CROSS_COMPILE_ARM32=arm-linux-gnueabi- \
          LD=ld.lld \
          CCACHE=ccache

    - name: Build Kernel Modules
      run: |
        cd ${{ env.KERNEL_DIR }}
        export PATH="${{ github.workspace }}/clang/bin:$PATH"
        export CC=clang
        export LD=ld.lld
        export CCACHE_DIR="${{ env.CCACHE_DIR }}"
        make -j$(nproc) O=out ARCH=arm64 modules

    - name: Upload Kernel Image and Modules
      uses: actions/upload-artifact@v4
      with:
        name: kernel-${{ env.DEVICE }}
        path: |
          ${{ env.KERNEL_DIR }}/out/arch/arm64/boot/Image.gz-dtb
          ${{ env.KERNEL_DIR }}/out/lib/modules/
